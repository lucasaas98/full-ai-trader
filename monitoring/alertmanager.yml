global:
  # Global configuration
  smtp_smarthost: 'localhost:587'
  smtp_from: 'trading-system@localhost'
  resolve_timeout: 5m

# Templates for alert formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'service', 'category']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'gotify-webhook'
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'gotify-critical'
      group_wait: 0s
      repeat_interval: 5m

    # Trading performance alerts
    - match:
        category: trading
      receiver: 'gotify-trading'
      group_wait: 30s
      repeat_interval: 15m

    # System alerts
    - match:
        category: system
      receiver: 'gotify-system'
      group_wait: 1m
      repeat_interval: 30m

    # Performance alerts
    - match:
        category: performance
      receiver: 'gotify-performance'
      group_wait: 2m
      repeat_interval: 1h

    # Database alerts
    - match:
        category: database
      receiver: 'gotify-database'
      group_wait: 1m
      repeat_interval: 30m

    # API alerts
    - match:
        category: api
      receiver: 'gotify-api'
      group_wait: 1m
      repeat_interval: 30m

    # Security alerts
    - match:
        category: security
      receiver: 'gotify-security'
      group_wait: 0s
      repeat_interval: 5m

# Receivers configuration
receivers:
  - name: 'gotify-webhook'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: '[{{ .Status }}] Trading System Alert'
        message: |
          {{ range .Alerts }}
          **Alert:** {{ .Annotations.summary }}
          **Description:** {{ .Annotations.description }}
          **Severity:** {{ .Labels.severity }}
          **Service:** {{ .Labels.service }}
          **Started:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-critical'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üö® CRITICAL: Trading System Emergency'
        message: |
          **CRITICAL ALERT DETECTED**
          {{ range .Alerts }}
          üî• **{{ .Annotations.summary }}**
          üìã **Description:** {{ .Annotations.description }}
          üè∑Ô∏è **Service:** {{ .Labels.service }}
          ‚è∞ **Started:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ if .Labels.runbook_url }}üìñ **Runbook:** {{ .Labels.runbook_url }}{{ end }}
          {{ end }}

          **IMMEDIATE ACTION REQUIRED**

  - name: 'gotify-trading'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üìà Trading Performance Alert'
        message: |
          **Trading Alert**
          {{ range .Alerts }}
          üí∞ **{{ .Annotations.summary }}**
          üìä **Details:** {{ .Annotations.description }}
          üéØ **Strategy:** {{ .Labels.strategy | default "Unknown" }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-system'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üñ•Ô∏è System Alert'
        message: |
          **System Monitoring Alert**
          {{ range .Alerts }}
          ‚ö†Ô∏è **{{ .Annotations.summary }}**
          üîß **Issue:** {{ .Annotations.description }}
          üè∑Ô∏è **Service:** {{ .Labels.service }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-performance'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: '‚ö° Performance Alert'
        message: |
          **Performance Issue Detected**
          {{ range .Alerts }}
          üêå **{{ .Annotations.summary }}**
          üìä **Metrics:** {{ .Annotations.description }}
          üè∑Ô∏è **Service:** {{ .Labels.service }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-database'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üóÑÔ∏è Database Alert'
        message: |
          **Database Issue**
          {{ range .Alerts }}
          üíæ **{{ .Annotations.summary }}**
          üîç **Details:** {{ .Annotations.description }}
          üè∑Ô∏è **Database:** {{ .Labels.database | default "trading_system" }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-api'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üåê API Alert'
        message: |
          **API Issue Detected**
          {{ range .Alerts }}
          üîå **{{ .Annotations.summary }}**
          üì° **Details:** {{ .Annotations.description }}
          üè∑Ô∏è **Endpoint:** {{ .Labels.endpoint | default "Unknown" }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

  - name: 'gotify-security'
    webhook_configs:
      - url: '${GOTIFY_URL}/message?token=${GOTIFY_TOKEN}'
        http_config:
          basic_auth:
            username: ''
            password: ''
        send_resolved: true
        title: 'üõ°Ô∏è SECURITY ALERT'
        message: |
          **SECURITY INCIDENT DETECTED**
          {{ range .Alerts }}
          üö® **{{ .Annotations.summary }}**
          üîí **Threat:** {{ .Annotations.description }}
          üè∑Ô∏è **Source:** {{ .Labels.source | default "Unknown" }}
          ‚è∞ **Time:** {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

          **INVESTIGATE IMMEDIATELY**

# Inhibit rules - prevent spam
inhibit_rules:
  # Inhibit any warning-level alerts when there are critical alerts
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['service']

  # Inhibit duplicate alerts for the same service
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: 'Service.*'
    equal: ['service']

  # Inhibit performance alerts when service is down
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      category: 'performance'
    equal: ['service']

# Silence configuration
silences:
  # Example: Maintenance window silences can be added here
  # - matchers:
  #     - name: 'service'
  #       value: 'data_collector'
  #   startsAt: '2024-01-01T00:00:00Z'
  #   endsAt: '2024-01-01T01:00:00Z'
  #   createdBy: 'maintenance'
  #   comment: 'Scheduled maintenance window'

# Time intervals for grouping
time_intervals:
  - name: business_hours
    time_intervals:
      - times:
          - start_time: '09:30'
            end_time: '16:00'
        weekdays: ['monday:friday']
        location: 'America/New_York'

  - name: after_hours
    time_intervals:
      - times:
          - start_time: '16:01'
            end_time: '09:29'
        weekdays: ['monday:friday']
        location: 'America/New_York'
      - weekdays: ['saturday', 'sunday']
        location: 'America/New_York'

  - name: weekend
    time_intervals:
      - weekdays: ['saturday', 'sunday']
        location: 'America/New_York'
