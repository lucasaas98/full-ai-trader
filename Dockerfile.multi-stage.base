FROM python:3-slim AS build

ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /app

COPY requirements.txt .

RUN pip install --upgrade pip && \
    pip install -r requirements.txt


# Stage 2: Runtime stage - clean Alpine without build tools
FROM python:3-slim AS runtime

RUN apt update && apt install curl -y
RUN apt clean && \
  rm -rf /var/lib/apt/lists/*

ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Copy installed packages from build stage's site-packages
COPY --from=build /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=build /usr/local/bin /usr/local/bin

# Copy application code
COPY shared/ ./shared/
COPY logging/ ./logging/
COPY monitoring/ ./monitoring/

RUN mkdir -p /app/data/logs /app/data/parquet /app/data/exports
RUN groupadd -r appuser && useradd -r -g appuser appuser

USER appuser

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${SERVICE_PORT:-8000}/health || exit 1

CMD ["python", "-m", "src.main"]
