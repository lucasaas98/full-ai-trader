[tool:pytest]
minversion = 6.0
addopts =
    -ra
    -q
    --strict-markers
    --strict-config
    --cov=services
    --cov=shared
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-fail-under=80
    --tb=short
    --durations=10
    --maxfail=5
    -p no:warnings
    -n auto
    --order-dependencies

asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

testpaths = tests

python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test service interactions
    performance: Performance tests - measure system performance
    load: Load tests - test system under heavy load
    slow: Slow running tests that take more than 30 seconds
    smoke: Smoke tests - basic functionality verification
    regression: Regression tests - prevent previously fixed bugs
    security: Security-related tests
    api: API endpoint tests
    database: Database-related tests
    redis: Redis-related tests
    external_api: Tests requiring external API access
    backtesting: Backtesting and simulation tests
    real_time: Real-time data processing tests
    manual: Tests requiring manual intervention
    flaky: Tests known to be flaky/intermittent

# Test discovery
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    .venv
    .ropeproject

# Logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pandas.*
    ignore::RuntimeWarning:numpy.*
    error::UserWarning:tests.*

# Timeout settings
timeout = 300
timeout_method = thread

# Parallel execution and test ordering moved to addopts

# Custom test collection
collect_ignore =
    setup.py
    .venv
    build
    dist

# JUnit XML for CI/CD
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = false

# Performance test specific settings
performance_test_timeout = 600
load_test_max_workers = 20
stress_test_duration = 300

# Environment variables for testing
env =
    ENVIRONMENT=test
    LOG_LEVEL=DEBUG
    DB_NAME=test_trading_system
    REDIS_DB=1
    DISABLE_EXTERNAL_APIS=true
    TEST_MODE=true
